import{_ as i,r as a,o as s,c as r,a as t,d as o,w as c,b as e,e as p}from"./app-95a90fc2.js";const d={},_=t("h1",{id:"带你理解-object-和-function-的关系和原型链",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#带你理解-object-和-function-的关系和原型链","aria-hidden":"true"},"#"),e(" 带你理解 Object 和 Function 的关系和原型链")],-1),h=t("p",null,"目录",-1),u={class:"table-of-contents"},b=t("h2",{id:"_1-准备和-object-和-function-相关的函数和对象",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_1-准备和-object-和-function-相关的函数和对象","aria-hidden":"true"},"#"),e(" 1.准备和 Object 和 Function 相关的函数和对象")],-1),g={class:"custom-container tip"},m=t("p",{class:"custom-container-title"},"开始：",-1),f=t("p",null,"先学一下谷歌调试工具的相关知识：",-1),y=t("li",null,[t("p",null,"console.dir(): 打印指定对象的 JSON 表示形式")],-1),j=t("li",null,[t("p",null,[t("img",{src:"https://img-blog.csdnimg.cn/5b407728dcf841a39602dba5e5768a79.png",alt:"在这里插入图片描述"}),e("：表示属性值为对象")])],-1),x=t("li",null,[t("p",null,[t("img",{src:"https://img-blog.csdnimg.cn/1f1d85a228924a32a8f1d476497eb5aa.png",alt:"在这里插入图片描述"}),e("：橘色 f，表示其为函数")])],-1),O=t("li",null,[t("p",null,[t("img",{src:"https://img-blog.csdnimg.cn/9cb7e975b0e943e9b4d856e43d3d14a2.png",alt:"在这里插入图片描述"}),e("：[[Prototype]]内置属性，通过 Object.getPrototypeOf()可访问")])],-1),v=t("li",null,[t("p",null,[t("img",{src:"https://img-blog.csdnimg.cn/87146da65da142a78e4c69221cc98770.png",alt:"在这里插入图片描述"}),e("：函数拥有的属性 prototype。")])],-1),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype",target:"_blank",rel:"noopener noreferrer"},N=t("code",null,"prototype",-1),k=t("code",null,"[[Prototype]]",-1),P=t("code",null,"Object.getPrototypeOf(new Box()) === Box.prototype",-1),S=p('<p>接下来将通过调试工具打印指定 Object 和 Function 相关对象的 JSON 表示形式：</p><ol><li>函数 Object：</li></ol><p><img src="https://img-blog.csdnimg.cn/739545ce591f4de1adc21f03dbc6d606.png" alt="请添加图片描述"></p><ol start="2"><li>函数 Function：</li></ol><p><img src="https://img-blog.csdnimg.cn/50116bc3247b4726a2ede6febcacbad3.png" alt="请添加图片描述"></p><ol start="3"><li>函数 Object 的 prototype 属性（为对象）：</li></ol><p><img src="https://img-blog.csdnimg.cn/a6094451cc9c4ea8b808b8b5262676ed.png" alt="请添加图片描述"></p><ol start="4"><li>函数 Function 的 prototype 属性（为函数）：</li></ol><p><img src="https://img-blog.csdnimg.cn/4a48d782833b46158bbba7243d73c105.png" alt="请添加图片描述"></p><h2 id="_2-画关系图" tabindex="-1"><a class="header-anchor" href="#_2-画关系图" aria-hidden="true">#</a> 2.画关系图</h2><h3 id="_2-1-prototype-属性" tabindex="-1"><a class="header-anchor" href="#_2-1-prototype-属性" aria-hidden="true">#</a> 2.1 prototype 属性</h3><p>根据 步骤 1 的准备阶段，自然而然得到下图：</p><p><img src="https://img-blog.csdnimg.cn/c2a57f33a6f24b19a7c4cb0bbd52b839.png" alt="请添加图片描述"></p><h3 id="_2-2-prototype-内置属性和原型链" tabindex="-1"><a class="header-anchor" href="#_2-2-prototype-内置属性和原型链" aria-hidden="true">#</a> 2.2 [[Prototype]]内置属性和原型链</h3><p>这个关系只能通过认证的形式获得，认证结果分别和关系图对应：</p><p><img src="https://img-blog.csdnimg.cn/5f454e028dbe442fb6f8208e7bea0016.png" alt="请添加图片描述"></p><p><img src="https://img-blog.csdnimg.cn/bc8f644c4ccb4d788936724251b94443.png" alt="请添加图片描述"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>该图解释了为什么<strong>原型链的顶端</strong>为 null，①→③→__proto__:null 和 ②→③→__proto__:null。</p></div><h3 id="_2-3-constructor-属性" tabindex="-1"><a class="header-anchor" href="#_2-3-constructor-属性" aria-hidden="true">#</a> 2.3 constructor 属性</h3><p>同样，通过认证的形式获得，认证结果分别和关系图对应：</p><p><img src="https://img-blog.csdnimg.cn/47c447207e88420d9836a378c8e52915.png" alt="请添加图片描述"></p><p><img src="https://img-blog.csdnimg.cn/c6d71b1b66ab46a685903076d80aec19.png" alt="请添加图片描述"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>为什么 Object 和 Function 之间画虚线，因为 Object 自身并没有 constructor 属性，而是通过原型链（①→②）的方式访问的。即运行第一条表达式，实际上是运行第二条表达式。</p><p><img src="https://img-blog.csdnimg.cn/59b5821235e84dd4867cdef8b6098014.png" alt="请添加图片描述"></p></div><h2 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结" aria-hidden="true">#</a> 3.总结</h2><p>简化后的原型链如下：</p><p><img src="https://img-blog.csdnimg.cn/f731b9476dab47889c068f5db32a5fd8.png" alt="请添加图片描述"></p><h2 id="常考" tabindex="-1"><a class="header-anchor" href="#常考" aria-hidden="true">#</a> 常考</h2>',27),J=t("li",null,[t("p",null,"《你不知道的 JavaScript 上卷》6.1.3 比较思维模型")],-1),z={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain",target:"_blank",rel:"noopener noreferrer"};function B(C,V){const n=a("router-link"),l=a("ExternalLinkIcon");return s(),r("div",null,[_,h,t("nav",u,[t("ul",null,[t("li",null,[o(n,{to:"#_1-准备和-object-和-function-相关的函数和对象"},{default:c(()=>[e("1.准备和 Object 和 Function 相关的函数和对象")]),_:1})]),t("li",null,[o(n,{to:"#_2-画关系图"},{default:c(()=>[e("2.画关系图")]),_:1}),t("ul",null,[t("li",null,[o(n,{to:"#_2-1-prototype-属性"},{default:c(()=>[e("2.1 prototype 属性")]),_:1})]),t("li",null,[o(n,{to:"#_2-2-prototype-内置属性和原型链"},{default:c(()=>[e("2.2 [[Prototype]]内置属性和原型链")]),_:1})]),t("li",null,[o(n,{to:"#_2-3-constructor-属性"},{default:c(()=>[e("2.3 constructor 属性")]),_:1})])])]),t("li",null,[o(n,{to:"#_3-总结"},{default:c(()=>[e("3.总结")]),_:1})]),t("li",null,[o(n,{to:"#常考"},{default:c(()=>[e("常考")]),_:1})])])]),b,t("div",g,[m,f,t("ul",null,[y,j,x,O,v,t("li",null,[t("p",null,[e("[[Prototype]]和 prototype 的关系：通过构造函数创建的每一个实例都会自动将构造函数的 "),t("a",F,[N,o(l)]),e(" 属性作为其 "),k,e("。即，"),P,e("。")])])])]),S,t("ol",null,[J,t("li",null,[t("p",null,[t("a",z,[e("继承与原型链 - JavaScript | MDN (mozilla.org)"),o(l)])])])])])}const E=i(d,[["render",B],["__file","带你理解Object和Function的关系和原型链.html.vue"]]);export{E as default};
