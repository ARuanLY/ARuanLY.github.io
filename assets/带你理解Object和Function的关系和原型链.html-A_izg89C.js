import{_ as a,c as p,b as e,a as c,d as o,w as l,r,o as s,e as i}from"./app-CU3PtqxC.js";const d={},g={class:"table-of-contents"};function b(u,t){const n=r("router-link");return s(),p("div",null,[t[7]||(t[7]=e("meta",{name:"referrer",content:"no-referrer"},null,-1)),t[8]||(t[8]=e("h1",{id:"带你理解-object-和-function-的关系和原型链",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#带你理解-object-和-function-的关系和原型链"},[e("span",null,"带你理解 Object 和 Function 的关系和原型链")])],-1)),t[9]||(t[9]=e("p",null,"目录",-1)),e("nav",g,[e("ul",null,[e("li",null,[o(n,{to:"#_1-准备和-object-和-function-相关的函数和对象"},{default:l(()=>t[0]||(t[0]=[i("1.准备和 Object 和 Function 相关的函数和对象")])),_:1})]),e("li",null,[o(n,{to:"#_2-画关系图"},{default:l(()=>t[1]||(t[1]=[i("2.画关系图")])),_:1}),e("ul",null,[e("li",null,[o(n,{to:"#_2-1-prototype-属性"},{default:l(()=>t[2]||(t[2]=[i("2.1 prototype 属性")])),_:1})]),e("li",null,[o(n,{to:"#_2-2-prototype-内置属性和原型链"},{default:l(()=>t[3]||(t[3]=[i("2.2 [[Prototype]]内置属性和原型链")])),_:1})]),e("li",null,[o(n,{to:"#_2-3-constructor-属性"},{default:l(()=>t[4]||(t[4]=[i("2.3 constructor 属性")])),_:1})])])]),e("li",null,[o(n,{to:"#_3-总结"},{default:l(()=>t[5]||(t[5]=[i("3.总结")])),_:1})]),e("li",null,[o(n,{to:"#常考"},{default:l(()=>t[6]||(t[6]=[i("常考")])),_:1})])])]),t[10]||(t[10]=c('<h2 id="_1-准备和-object-和-function-相关的函数和对象" tabindex="-1"><a class="header-anchor" href="#_1-准备和-object-和-function-相关的函数和对象"><span>1.准备和 Object 和 Function 相关的函数和对象</span></a></h2><div class="hint-container tip"><p class="hint-container-title">开始：</p><p>先学一下谷歌调试工具的相关知识：</p><ul><li><p>console.dir(): 打印指定对象的 JSON 表示形式</p></li><li><p><img src="https://img-blog.csdnimg.cn/5b407728dcf841a39602dba5e5768a79.png" alt="在这里插入图片描述">：表示属性值为对象</p></li><li><p><img src="https://img-blog.csdnimg.cn/1f1d85a228924a32a8f1d476497eb5aa.png" alt="在这里插入图片描述">：橘色 f，表示其为函数</p></li><li><p><img src="https://img-blog.csdnimg.cn/9cb7e975b0e943e9b4d856e43d3d14a2.png" alt="在这里插入图片描述">：[[Prototype]]内置属性，通过 Object.getPrototypeOf()可访问</p></li><li><p><img src="https://img-blog.csdnimg.cn/87146da65da142a78e4c69221cc98770.png" alt="在这里插入图片描述">：函数拥有的属性 prototype。</p></li><li><p>[[Prototype]]和 prototype 的关系：通过构造函数创建的每一个实例都会自动将构造函数的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype" target="_blank" rel="noopener noreferrer"><code>prototype</code></a> 属性作为其 <code>[[Prototype]]</code>。即，<code>Object.getPrototypeOf(new Box()) === Box.prototype</code>。</p></li></ul></div><p>接下来将通过调试工具打印指定 Object 和 Function 相关对象的 JSON 表示形式：</p><ol><li>函数 Object：</li></ol><p><img src="https://img-blog.csdnimg.cn/739545ce591f4de1adc21f03dbc6d606.png" alt="请添加图片描述"></p><ol start="2"><li>函数 Function：</li></ol><p><img src="https://img-blog.csdnimg.cn/50116bc3247b4726a2ede6febcacbad3.png" alt="请添加图片描述"></p><ol start="3"><li>函数 Object 的 prototype 属性（为对象）：</li></ol><p><img src="https://img-blog.csdnimg.cn/a6094451cc9c4ea8b808b8b5262676ed.png" alt="请添加图片描述"></p><ol start="4"><li>函数 Function 的 prototype 属性（为函数）：</li></ol><p><img src="https://img-blog.csdnimg.cn/4a48d782833b46158bbba7243d73c105.png" alt="请添加图片描述"></p><h2 id="_2-画关系图" tabindex="-1"><a class="header-anchor" href="#_2-画关系图"><span>2.画关系图</span></a></h2><h3 id="_2-1-prototype-属性" tabindex="-1"><a class="header-anchor" href="#_2-1-prototype-属性"><span>2.1 prototype 属性</span></a></h3><p>根据 步骤 1 的准备阶段，自然而然得到下图：</p><p><img src="https://img-blog.csdnimg.cn/c2a57f33a6f24b19a7c4cb0bbd52b839.png" alt="请添加图片描述"></p><h3 id="_2-2-prototype-内置属性和原型链" tabindex="-1"><a class="header-anchor" href="#_2-2-prototype-内置属性和原型链"><span>2.2 [[Prototype]]内置属性和原型链</span></a></h3><p>这个关系只能通过认证的形式获得，认证结果分别和关系图对应：</p><p><img src="https://img-blog.csdnimg.cn/5f454e028dbe442fb6f8208e7bea0016.png" alt="请添加图片描述"></p><p><img src="https://img-blog.csdnimg.cn/bc8f644c4ccb4d788936724251b94443.png" alt="请添加图片描述"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>该图解释了为什么<strong>原型链的顶端</strong>为 null，①→③→__proto__:null 和 ②→③→__proto__:null。</p></div><h3 id="_2-3-constructor-属性" tabindex="-1"><a class="header-anchor" href="#_2-3-constructor-属性"><span>2.3 constructor 属性</span></a></h3><p>同样，通过认证的形式获得，认证结果分别和关系图对应：</p><p><img src="https://img-blog.csdnimg.cn/47c447207e88420d9836a378c8e52915.png" alt="请添加图片描述"></p><p><img src="https://img-blog.csdnimg.cn/c6d71b1b66ab46a685903076d80aec19.png" alt="请添加图片描述"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为什么 Object 和 Function 之间画虚线，因为 Object 自身并没有 constructor 属性，而是通过原型链（①→②）的方式访问的。即运行第一条表达式，实际上是运行第二条表达式。</p><p><img src="https://img-blog.csdnimg.cn/59b5821235e84dd4867cdef8b6098014.png" alt="请添加图片描述"></p></div><h2 id="_3-总结" tabindex="-1"><a class="header-anchor" href="#_3-总结"><span>3.总结</span></a></h2><p>简化后的原型链如下：</p><p><img src="https://img-blog.csdnimg.cn/f731b9476dab47889c068f5db32a5fd8.png" alt="请添加图片描述"></p><h2 id="常考" tabindex="-1"><a class="header-anchor" href="#常考"><span>常考</span></a></h2><ol><li><p>《你不知道的 JavaScript 上卷》6.1.3 比较思维模型</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain" target="_blank" rel="noopener noreferrer">继承与原型链 - JavaScript | MDN (mozilla.org)</a></p></li></ol>',30))])}const h=a(d,[["render",b]]),f=JSON.parse('{"path":"/en/articles/js/%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3Object%E5%92%8CFunction%E7%9A%84%E5%85%B3%E7%B3%BB%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html","title":"带你理解 Object 和 Function 的关系和原型链","lang":"zh-CN","frontmatter":{"lang":"zh-CN","date":"2023-08-27T00:00:00.000Z","description":"ARuanLY个人博客"},"headers":[{"level":2,"title":"1.准备和 Object 和 Function 相关的函数和对象","slug":"_1-准备和-object-和-function-相关的函数和对象","link":"#_1-准备和-object-和-function-相关的函数和对象","children":[]},{"level":2,"title":"2.画关系图","slug":"_2-画关系图","link":"#_2-画关系图","children":[{"level":3,"title":"2.1 prototype 属性","slug":"_2-1-prototype-属性","link":"#_2-1-prototype-属性","children":[]},{"level":3,"title":"2.2 [[Prototype]]内置属性和原型链","slug":"_2-2-prototype-内置属性和原型链","link":"#_2-2-prototype-内置属性和原型链","children":[]},{"level":3,"title":"2.3 constructor 属性","slug":"_2-3-constructor-属性","link":"#_2-3-constructor-属性","children":[]}]},{"level":2,"title":"3.总结","slug":"_3-总结","link":"#_3-总结","children":[]},{"level":2,"title":"常考","slug":"常考","link":"#常考","children":[]}],"git":{"contributors":[{"name":"ruanliyou","username":"ruanliyou","email":"3205647203@qq.com","commits":1,"url":"https://github.com/ruanliyou"}],"changelog":[{"hash":"9f02a038de382e3f16719360cc9af239c183f329","time":1744090884000,"email":"3205647203@qq.com","author":"ruanliyou","message":"feat: 添加新文档和配置"}]},"filePathRelative":"en/articles/js/带你理解Object和Function的关系和原型链.md"}');export{h as comp,f as data};
